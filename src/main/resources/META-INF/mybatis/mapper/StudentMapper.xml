<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.student.mapper.StudentMapper">

    <resultMap id="studentMap" type="com.student.pojo.student.StudentDTO">

        <result column="student_uid" property="studentUid"/>
        <result column="class_uid" property="classUid"/>
        <result column="student_no" property="studentNo"/>
        <result column="student_name" property="studentName"/>
        <result column="student_phone" property="studentPhone"/>
        <result column="student_sex" property="studentSex"/>
        <result column="student_email" property="studentEmail"/>
        <result column="class_name" property="className"/>
        <result column="class_student_name" property="classStudentName"/>

        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated_by" property="updatedBy"/>
    </resultMap>

    <insert id="createStudent" parameterType="com.student.pojo.student.StudentModel">
        <selectKey order="BEFORE" statementType="STATEMENT" keyProperty="studentUid" resultType="java.lang.String">
            select st_uuid_short()
        </selectKey>
        insert into st_student
		(student_uid,class_uid,student_no,student_name,student_phone,student_sex,
		student_email,created_at,updated_at,created_by,updated_by)
		VALUES
		(#{studentUid},#{classUid},#{studentNo},#{studentName},#{studentPhone},#{studentSex},
		#{studentEmail},now(),now(),#{createdBy},#{updatedBy})
	</insert>

    <select id="listStudent" parameterType="com.student.pojo.student.StudentRequestDTO"
            resultMap="studentMap">
        select a.*,b.class_name,c.teacher_name AS class_teacher_name
        from st_student a
        LEFT JOIN st_class b ON a.class_uid = b.class_uid
        LEFT JOIN st_teacher c ON b.class_teacher_uid = c.teacher_uid
        where 1=1
        <if test="studentName != null and studentName !='' ">
            AND a.student_name LIKE CONCAT('%', #{studentName}, '%')
        </if>
        <if test="classUid != null and classUid !='' ">
            AND a.class_uid = #{classUid}
        </if>
        <if test="studentNo != null and studentNo !='' ">
            AND a.student_no = #{studentNo}
        </if>
        <if test="studentSex != null and studentSex !='' ">
            AND a.student_sex = #{studentSex}
        </if>
        GROUP BY a.student_uid
        ORDER BY a.id desc
        LIMIT #{page},#{limit}
    </select>

    <select id="getStudent" resultMap="studentMap">
        select a.*,b.class_name,c.teacher_name AS class_teacher_name
        from st_student a
        LEFT JOIN st_class b ON a.class_uid = b.class_uid
        LEFT JOIN st_teacher c ON b.class_teacher_uid = c.teacher_uid
        where a.student_uid = #{studentUid}
        GROUP BY a.student_uid
    </select>

    <select id="countStudent" parameterType="com.student.pojo.student.StudentRequestDTO"
            resultType="java.lang.Integer">
        SELECT COUNT(1)
        from st_student a
        LEFT JOIN st_class b ON a.class_uid = b.class_uid
        LEFT JOIN st_teacher c ON b.class_teacher_uid = c.teacher_uid
        where 1=1
        <if test="studentName != null and studentName !='' ">
            AND a.student_name LIKE CONCAT('%', #{studentName}, '%')
        </if>
        <if test="classUid != null and classUid !='' ">
            AND a.class_uid = #{classUid}
        </if>
        <if test="studentNo != null and studentNo !='' ">
            AND a.student_no = #{studentNo}
        </if>
        <if test="studentSex != null and studentSex !='' ">
            AND a.student_sex = #{studentSex}
        </if>
    </select>

    <delete id="deleteStudent">
        delete
        FROM st_student
        where student_uid = #{studentUid}
    </delete>

    <update id="updateStudent" parameterType="com.student.pojo.student.StudentModel">
        update st_student
        SET updated_at = now()
        <if test="classUid != null and classUid !='' ">
            , class_uid = #{classUid}
        </if>
        <if test="studentPhone != null and studentPhone !='' ">
            , student_phone = #{studentPhone}
        </if>
        <if test="studentEmail != null and studentEmail !='' ">
            , student_email = #{studentEmail}
        </if>
        where student_uid = #{studentUid};

    </update>
</mapper>