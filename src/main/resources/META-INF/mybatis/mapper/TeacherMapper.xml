<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.student.mapper.TeacherMapper">

    <resultMap id="teacherMap" type="com.student.pojo.teacher.TeacherModel">

        <result column="teacher_uid" property="teacherUid"/>
        <result column="teacher_name" property="teacherName"/>
        <result column="teacher_phone" property="teacherPhone"/>
        <result column="email" property="email"/>

        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated_by" property="updatedBy"/>
    </resultMap>
    <resultMap id="teacherClassRelMap" type="com.student.pojo.teacher.TeacherClassRelModel">

        <result column="teacher_class_rel_uid" property="teacherClassRelUid"/>
        <result column="teacher_name" property="teacherName"/>
        <result column="class_name" property="className"/>
    </resultMap>

    <insert id="createTeacher" parameterType="com.student.pojo.teacher.TeacherModel">
        <selectKey order="BEFORE" statementType="STATEMENT" keyProperty="teacherUid" resultType="java.lang.String">
            select st_uuid_short()
        </selectKey>
        insert into st_teacher
        (teacher_uid,teacher_no,teacher_name,teacher_phone,email,created_at,updated_at,created_by,updated_by)
        VALUES
        (st_uuid_short(),#{teacherNo},#{teacherName},#{teacherPhone},#{email},now(),now(),#{createdBy},#{updatedBy})
    </insert>

    <select id="listTeacherClass" parameterType="com.student.pojo.teacher.TeacherRequestDTO"
            resultMap="teacherClassRelMap">
        select a.teacher_name,c.class_name,b.teacher_class_rel_uid
        from st_teacher a
        JOIN st_teacher_class_rel b ON a.teacher_uid = b.teacher_uid
        JOIN st_class c ON c.class_uid = b.class_uid
        where 1=1
        <if test="classUid != null and classUid !='' ">
            AND b.class_uid = #{classUid}
        </if>
        <if test="teacherUid != null and teacherUid !='' ">
            AND a.teacher_uid = #{teacherUid}
        </if>
        ORDER BY a.id desc
        LIMIT #{page},#{limit}
    </select>

    <select id="countTeacherClass" parameterType="com.student.pojo.teacher.TeacherRequestDTO"
            resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM (
        select a.*
        from st_teacher a
        LEFT JOIN st_teacher_class_rel b ON a.teacher_uid = b.teacher_uid
        where 1=1
        <if test="classUid != null and classUid !='' ">
            AND b.class_uid = #{classUid}
        </if>
        <if test="teacherUid != null and teacherUid !='' ">
            AND a.teacher_uid = #{teacherUid}
        </if>
        ) result
    </select>

    <select id="listTeacher" parameterType="com.student.pojo.teacher.TeacherRequestDTO"
            resultMap="teacherMap">
        select a.*
        from st_teacher a
        LEFT JOIN st_teacher_class_rel b ON a.teacher_uid = b.teacher_uid
        where 1=1
        <if test="teacherName != null and teacherName !='' ">
            AND a.teacher_name LIKE CONCAT('%', #{teacherName}, '%')
        </if>
        <if test="classUid != null and classUid !='' ">
            AND b.class_uid = #{classUid}
        </if>
        GROUP BY a.teacher_uid
        ORDER BY a.id desc
        LIMIT #{page},#{limit}
    </select>

    <select id="countTeacher" parameterType="com.student.pojo.teacher.TeacherRequestDTO"
            resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM (
        select a.*
        from st_teacher a
        LEFT JOIN st_teacher_class_rel b ON a.teacher_uid = b.teacher_uid
        where 1=1
        <if test="teacherName != null and teacherName !='' ">
            AND a.teacher_name LIKE CONCAT('%', #{teacherName}, '%')
        </if>
        <if test="classUid != null and classUid !='' ">
            AND b.class_uid = #{classUid}
        </if>
        GROUP BY a.teacher_uid) result
    </select>

    <select id="getTeacher" parameterType="com.student.pojo.teacher.TeacherRequestDTO"
            resultMap="teacherMap">
        select a.*
        from st_teacher a
        JOIN st_teacher_class_rel b ON a.teacher_uid = b.teacher_uid
        where teacher_uid = #{teacherUid}
    </select>

    <delete id="deleteTeacher">
        delete
        FROM st_teacher
        where teacher_uid = #{teacherUid}
    </delete>

    <delete id="deleteTeacherClass">
        delete
        FROM st_teacher_class_rel
        where teacher_class_rel_uid = #{teacherClassRelUid}
    </delete>

    <update id="updateTeacher" parameterType="com.student.pojo.teacher.TeacherModel">
        update st_teacher
        SET updated_at = now()
        <if test="teacherPhone != null and teacherPhone !='' ">
            , teacher_phone = #{teacherPhone}
        </if>
        <if test="email != null and email !='' ">
            , email = #{email}
        </if>
        <if test="teacherName != null and teacherName !='' ">
            , teacher_name = #{teacherName}
        </if>
        where teacher_uid = #{teacherUid};

    </update>
</mapper>